{"ast":null,"code":"import _slicedToArray from \"/var/www/mern/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/var/www/mern/client/src/component/AlertDismissibleExample.js\";\n\nfunction AlertDismissibleExample() {\n  const _useState = useState(true),\n        _useState2 = _slicedToArray(_useState, 2),\n        show = _useState2[0],\n        setShow = _useState2[1];\n\n  if (show) {\n    return React.createElement(Alert, {\n      variant: \"danger\",\n      onClose: () => setShow(false),\n      dismissible: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 6\n      },\n      __self: this\n    }, React.createElement(Alert.Heading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 7\n      },\n      __self: this\n    }, \"Oh snap! You got an error!\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 8\n      },\n      __self: this\n    }, \"Change this and that and try again. Duis mollis, est non commodo luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit. Cras mattis consectetur purus sit amet fermentum.\"));\n  }\n\n  return React.createElement(Button, {\n    onClick: () => setShow(true),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, \"Show Alert\");\n}\n\nrender(React.createElement(AlertDismissibleExample, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}));","map":{"version":3,"sources":["/var/www/mern/client/src/component/AlertDismissibleExample.js"],"names":["AlertDismissibleExample","useState","show","setShow","render"],"mappings":";;;AAAA,SAASA,uBAAT,GAAmC;AAAA,oBACPC,QAAQ,CAAC,IAAD,CADD;AAAA;AAAA,QACxBC,IADwB;AAAA,QAClBC,OADkB;;AAG/B,MAAID,IAAJ,EAAU;AACR,WACE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAC,QAAf;AAAwB,MAAA,OAAO,EAAE,MAAMC,OAAO,CAAC,KAAD,CAA9C;AAAuD,MAAA,WAAW,MAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,KAAD,CAAO,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gMAFF,CADF;AAUD;;AACD,SAAO,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMA,OAAO,CAAC,IAAD,CAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;;AAEDC,MAAM,CAAC,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAD,CAAN","sourcesContent":["function AlertDismissibleExample() {\n    const [show, setShow] = useState(true);\n  \n    if (show) {\n      return (\n        <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n          <Alert.Heading>Oh snap! You got an error!</Alert.Heading>\n          <p>\n            Change this and that and try again. Duis mollis, est non commodo\n            luctus, nisi erat porttitor ligula, eget lacinia odio sem nec elit.\n            Cras mattis consectetur purus sit amet fermentum.\n          </p>\n        </Alert>\n      );\n    }\n    return <Button onClick={() => setShow(true)}>Show Alert</Button>;\n  }\n  \n  render(<AlertDismissibleExample />);"]},"metadata":{},"sourceType":"module"}